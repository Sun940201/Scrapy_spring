apply plugin: 'maven'

ext.optionalDeps = []
ext.providedDeps = []

ext.optional = { optionalDeps << it }
ext.provided = { providedDeps << it }

// exclude hadoop install sub projects
def hadoopInstalls = ['cdh5', 'hadoop25', 'hadoop26', 'hdp22', 'phd21']
if (hadoopInstalls.contains(project.name)) {
 // Disable installing hadoop distro artifacts
 install.enabled = false
 // Disable publishing hadoop distro artifacts
 project.tasks.findByPath("artifactoryPublish")?.enabled = false
}

install {
 repositories.mavenInstaller {
  customizePom(pom, project)
 }
}

def customizePom(pom, gradleProject) {
 pom.whenConfigured { generatedPom ->
  // respect 'optional' and 'provided' dependencies
  gradleProject.optionalDeps.each { dep ->
   generatedPom.dependencies.find { it.artifactId == dep.name }?.optional = true
  }
  gradleProject.providedDeps.each { dep ->
   generatedPom.dependencies.find { it.artifactId == dep.name }?.scope = 'provided'
  }

  // eliminate test-scoped dependencies (no need in maven central poms)
  generatedPom.dependencies.removeAll { dep ->
   dep.scope == 'test'
  }

  def versions = new Properties()
  def propertiesFile = new File('dependencies.properties')
  propertiesFile.withInputStream {
   versions.load(it)
  }

  // add all items necessary for maven central publication
  generatedPom.project {
   dependencyManagement {
    dependencies {
     versions.each { k,v ->
      dependency {
       def toks = k.split(':')
       groupId = toks[0]
       artifactId = toks[1]
       version = v
      }
     }
    }
   }

   name = gradleProject.description
   description = gradleProject.description
   url = linkHomepage
   organization {
    name = 'Spring by Pivotal'
    url = 'https://spring.io'
   }
   licenses {
    license {
     name 'The Apache Software License, Version 2.0'
     url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
     distribution 'repo'
    }
   }
   scm {
    url = linkScmUrl
    connection = linkScmConnection
    developerConnection = linkScmDevConnection
   }

   developers {
    developer {
     id = 'markfisher'
     name = 'Mark Fisher'
     email = 'mfisher@pivotal.io'
    }
    developer {
     id = 'markpollack'
     name = 'Mark Pollack'
     email = 'mpollack@pivotal.io'
    }
    developer {
     id = 'garyrussell'
     name = 'Gary Russell'
     email = 'grussell@pivotal.io'
    }
    developer {
     id = 'ghillert'
     name = 'Gunnar Hillert'
     email = 'ghillert@pivotal.io'
    }
    developer {
     id = 'pperalta'
     name = 'Patrick Peralta'
     email = 'pperalta@pivotal.io'
    }
    developer {
     id = 'dturanski'
     name = 'David Turanski'
     email = 'dturanski@pivotal.io'
    }
    developer {
     id = 'ebottard'
     name = 'Eric Bottard'
     email = 'ebottard@pivotal.io'
    }
    developer {
     id = 'grenfro'
     name = 'Glenn Renfro'
     email = 'grenfro@pivotal.io'
    }
    developer {
     id = 'igopinathan'
     name = 'Ilayaperumal Gopinathan'
     email = 'igopinathan@pivotal.io'
    }
    developer {
     id = 'trisberg'
     name = 'Thomas Risberg'
     email = 'trisberg@pivotal.io'
    }
    developer {
     id = 'mbogoevici'
     name = 'Marius Bogoevici'
     email = 'mbogoevici@pivotal.io'
    }
    developer {
     id = 'jhickey'
     name = 'Jennifer Hickey'
    }
    developer {
     id = 'mminella'
     name = 'Michael Minella'
     email = 'mminella@pivotal.io'
    }
    developer {
     id = 'ltaylor'
     name = 'Luke Taylor'
     email = 'ltaylor@pivotal.io'
    }
    developer {
     id = 'aclement'
     name = 'Andy Clement'
     email = 'aclement@pivotal.io'
    }
    developer {
     id = 'dsyer'
     name = 'Dave Syer'
     email = 'dsyer@pivotal.io'
    }
    developer {
     id = 'jvalkealahti'
     name = 'Janne Valkealahti'
     email = 'jvalkealahti@pivotal.io'
    }
    developer {
     id = 'jbrisbin'
     name = 'Jon Brisbin'
     email = 'jbrisbin@pivotal.io'
    }
    developer {
     id = 'tdarimont'
     name = 'Thomas Darimont'
     email = 'tdarimont@pivotal.io'
    }
   }
  }
 }
}